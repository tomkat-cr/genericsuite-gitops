# File: k8/deployment-v1.yml
# Two containers in the same Service. This is not good for cases where each container needs their own public port number.
# 2022-02-25 | CR

# IMPORTANT:
# Replace exampleapp with the name of the project
# Replace exampleapp_docker_account with the Docker Hub account where the images are stored
# Replace exampleapp_secret_generic with the name of the secret where the environment variables are stored

---
apiVersion: v1
kind: Service
metadata:
  name: exampleappservice
spec:
  selector:
    app: exampleapp
  ports:
    - protocol: "TCP"
      # Port accessible inside cluster
      port: 8081
      # Port to forward to inside the pod
      targetPort: 3001
      # Port accessible outside cluster
      # nodePort: 80
      #  80: provided port is not in the valid range. The range of valid ports is 30000-32767
      nodePort: 30001
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exampleappdeployment
  labels:
    app: exampleapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: exampleapp
  template:
    metadata:
      labels:
        app: exampleapp
    spec:
      containers:

        - name: exampleapp-frontend
          image: exampleapp_docker_account/exampleapp_frontend:v0.1.1-amd64
          ports:
            - containerPort: 3001
          env:
            - name: BACKEND_URL
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: REACT_APP_API_URL
              value: "https://${BACKEND_URL}:5000"

        - name: exampleapp-backend
          image: exampleapp_docker_account/exampleapp_backend:v0.1.1-amd64
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_APP
              value: "exampleapp_api"
            - name: FLASK_ENV
              value: "exampleapp_api"
            - name: APP_DB_NAME
              value: "exampleapp_dev"
            - name: FLASK_DEBUG
              value: "0"
            - name: APP_DB_URI
              valueFrom:
                secretKeyRef:
                  name: exampleapp_secret_generic
                  key: exampleapp_db_uri
            - name: APP_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: exampleapp_secret_generic
                  key: exampleapp_secret_key
